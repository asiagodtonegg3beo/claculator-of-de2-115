
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE2_115(

	//////////// CLOCK //////////
	CLOCK_50,
	CLOCK2_50,
	CLOCK3_50,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SEG7 //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	GPIO 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// LED //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY //////////
input 		     [3:0]		KEY;

//////////// SW //////////
input 		    [17:0]		SW;

//////////// SEG7 //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

//////////// GPIO, GPIO connect to GPIO Default //////////
inout 		    [35:0]		GPIO;


//=======================================================
//  REG/WIRE declarations
//=======================================================
wire clock_1s, clock_100ms, clock_10ms;
wire [7:0] t_hour, t_min, t_sec, key_count;


//=======================================================
//  Structural coding
//=======================================================

assign LEDR[8] = clock_1s;
assign LEDR[7] = clock_100ms;
assign LEDR[6] = clock_10ms;

clock_all x
(
.clk(CLOCK_50), 
.clock_1s(clock_1s), 
.clock_100ms(clock_100ms),
.clock_10ms(clock_10ms)
);

clock_time uclock( .iclk(clock_100ms), .ikey(KEY),
.okey_count(key_count), .ohour(t_hour), .omin(t_min), .osec(t_sec), .ledg(LEDG), .sw(SW));

SEG7_LUT_8 uLED ( .oSEG0(HEX0), .oSEG1(HEX1),.oSEG2(HEX2),.oSEG3(HEX3),
.oSEG4(HEX4),.oSEG5(HEX5),.oSEG6(HEX6),.oSEG7(HEX7),
.iDIG({key_count, t_hour, t_min, t_sec}) );
endmodule